;<NEWPASCAL>DEBSP.MAC.3, 22-Jul-77 11:52:34, Edit by MATS
;<NEWPASCAL>DEBSP.MAC.2, 22-Jul-77 11:13:57, Edit by MATS
;<NEWPASCAL>DEBSP.MAC.1, 22-Jul-77 11:10:41, Edit by MATS
	TITLE	DEBSP *** DEBUG SUPPORT ***
	TWOSEG
;
;*** ENTRY-POINTS
;
	ENTRY INDEB.
	ENTRY EXDEB.
;
;*** EXTERNAL REFERENCES
;
	EXTERN END,DEBUG
	EXTERN OVERF.
 
	;REGISTER DEFINITION
 
	AC0=0
	AC1=1
	REGIN=1		;INITILISATION OF REGISTERSTACK
	REG= REGIN+1
	REG1=REGIN+1+1
	REG2=REGIN+1+2
	REG3=REGIN+1+3
	REG4=REGIN+1+4
	REG5=REGIN+1+5
	REG6=REGIN+1+6
	JBFFLW=14
	NEWREG=15
	BUFFER=15
	BASIS=16
	TOPP=17
;
;*** DESCRIPTION OF FILEBLOCK( SEE WRITEMC)
;
	FILPTR= 0
	FILEOF= 1
	FILEOL= 2
	FILOPN= 3
	FILLKP= 4
	FILENT= 5
	FILIN=	6
	FILOUT= 7
	FILCLS=10
	FILSTA=11	; .+0  FOR FILESTATUS
			; .+1  FOR DEVICE
			; .+2  FOR POINTER TO BUFFERHEADER
	FILNAM=14
	FILEXT=15
	FILPRO=16
	FILPPN=17
	FILBFH=20	;BUFFER HEADER
	FILBTP=21	;BYTE POINTER
	FILBTC=22	;BYTE COUNT IN BUFFER
	FILLNR=23	;IF ASCII MODE - LINENR IN ASCIICHARACTERS
	FILCNT=24	;LH= IF BINARY MODE : NEG. NUMBER OF WORDS IN COMPONENT
			;    IF ASCII MODE  : NR. OF CH. IN LINE AND TAB INDICATOR
			;RH= ADDRESS OF FIRST WORD IN COMPONENT
	FILCMP=25	;FIRST WORD OF COMPONENT
;
;*** CONSTANTS
;
	MAXEOF=10
	DEBSIZE=2000	;1K
;
;*** ADDRESSES
;
	.JBREL= 44
	.JBDDT= 74
	.JBSA=120
	.JBFF=121
	.JBAPR=125
	.JBCNI=126
	.JBTPC=127
	.JBOPC=130
	RGSTRS=140
	STACKBO=143
	STATUS=144
	LIMIT=145
	.GTSGN=14
	.GTLIM=40
;
;*** START OF VARIANT CODE
;
	LOC .JBDDT			;UPDATE .JBDDT
	XWD 0,DDTDB.
 
	LOC .JBAPR			;UPDATE .JBAPR
	XWD 0, APRINT			;INTERRUPT-ROUTINE
;
;*** START OF INVARIANT CODE
;
	RELOC 400000
;
;*** PROCEDURE INDEB.
;    - INITIALIZE DEBUG SYSTEM
;
;INDEB.:	PUSHJ	TOPP	,SHRCOD		;CALL SHARABLE"
;	JUMPE	AC1	,.+3		;NOT SHR
;	OUTSTR	[ASCIZ/
;%?	PROGRAMS COMPILED WITH THE DEBUG-OPTION MUST NOT BE SHARABLE:
;	RETRY WITH .SAVE INSTEAD OF .SSAVE/]
;	JRST	END
INDEB.:
	SOJ	NEWREG	,		;INCREMENT NEWREG
	HRRI	AC1	,377777		;LOAD FIRST LINK - WORD
	HRLI	AC1	,377777		;FOR HEAP - DUMP
	MOVEM	AC1	,(NEWREG)	;DEPOSITE LINK - WORD
	HRRZ	AC1	,.JBFF	        ;GET HIGHEST LOC
	MOVEM	AC1	,RGSTRS		;OLD CORE-END BECOMES BEGIN OF DEBUG AREA
	ADDI	AC1	,DEBSIZE
	CORE	AC1	,		;GET CORE FOR DEBUGGING
	HALT				;ERROR RETURN
	HRRZ	AC1	,RGSTRS
	MOVEI	AC1	,DEBSIZE(AC1)
	HRRM	AC1	,.JBFF
	PUSHJ	TOPP	,SAVERG		;SAVE REGISTERS
	SETZM	0	,STATUS		;LH='INIT', RH=PROG.BEGIN
	PUSHJ	TOPP	,INIAPR		;
	PUSHJ	TOPP	,DEBUG.
	POPJ	TOPP	,
;
;*** PROCEDURE EXDEB.
;    - ENTER THE DEBUG SYSTEM
;
EXDEB.: PUSHJ	TOPP	,SAVERG		;SAVE REGISTERS
	HRLI	AC1	,1		;STATUS='STOP'
	HRR	AC1	,0(TOPP)	;RH=RETURNADDR
	SUBI	AC1	,1		;RH=STOPADDR
	MOVEM	AC1	,STATUS
	PUSHJ	TOPP	,DEBUG.		;CALL DEBUG
	POPJ	TOPP	,
;
;*** AUXILIARY PROCEDURES OF THE DEBUG SYSTEM
;
HALT.:	JRST	0	,HALT1      	;THIS ENTRY MUST BE 2 LOC. 
					;BEFORE DDTDB.
ERRDB.: JRST	0	,ERRDB1		;THIS ENTRY MUST BE BEFORE DDTDB.
 
DDTDB.: PUSHJ	TOPP	,SAVERG		;SAVE REGISTERS
	HRLI	AC1	,2		;STATUS='DDT'
	HRR	AC1	,.JBOPC		;RETURNADDR
	MOVEM	AC1	,STATUS
	PUSHJ	TOPP	,DEBUG.		;CALL DEBUG
	JRST	0	,@.JBOPC	;RETURN TO PROGRAM
;*******************************************************************************
HALT1:	HRLI	AC0	,4		;STATUS='HALT'
	SKIPA
ERRDB1:	HRLI	AC0	,3		;STATUS='RUNTIME ERROR'
	HRRZ	AC1	,TOPP
	CAML	AC1	,RGSTRS		;ERROR IN DEBUG?
	JRST	END
	MOVEM	AC0	,STATUS
	PUSHJ	TOPP	,SAVERG		;SAVE REGISTERS
	PUSHJ	TOPP	,DEBUG.		;CALL DEBUG
	JRST	0	,END		;EXIT
;*******************************************************************************
SAVERG: MOVEM	AC0	,@RGSTRS	;SAVE USER-REGISTERS
	MOVE	AC0	,AC1
	HRRZ	AC1	,RGSTRS
	MOVEM	AC0	,1(AC1)
	HRRI	AC0	,2(AC1)
	HRLI	AC0	,2
	BLT	AC0	,17(AC1)
	POPJ	TOPP	,0
;*******************************************************************************
;INIAPR: MOVE	AC1	,[XWD -1, .GTLIM]	;ARGUMENT FOR GETTAB
;	GETTAB	AC1	,			;
;	HALT				;ERROR RETURN
;	TLNN	AC1	,200		;TEST IF BATCH-JOB
INIAPR:
	JRST	NOTBAT			;NO
	TLZ	AC1	,777740		;SET BITS 0-12 TO ZERO
	IMULI	AC1	,24		;CONVERT JIFFIES TO MSEC
	MOVEM  	AC1	,LIMIT		;STORE TIME LIMIT
	MOVEI  	AC1	,21110		;ARGUMENT FOR APRENB
	APRENB	AC1	,		;ILL-MEM-REF + CLOCK-FLAG
	POPJ	TOPP	,
;*******************************************************************************
NOTBAT:	MOVEI	AC1	,1		;STORE,THAT THIS JOB IS
	HRLM	AC1	,STACKBO	;A TIMESSHARING-JOB
	MOVEI	AC1	,20110		;ARGUMENT FOR APRENB
	APRENB	AC1	,		;ILL-MEM-REF
	POPJ	TOPP	,
;*******************************************************************************
APRINT:	MOVEM	AC0	,@RGSTRS	;SAVE AC0
	HRRZ	AC0	,.JBCNI		;GET REASON FOR INTERRUPT
	TRNE	AC0	,1000		;TEST IF TIME INTERRUPT
	JRST	TIMINT			;JUMP TO TIME-INTERRUPT-ROUTINE
	TRNE	AC0	,110		;TEST IF ARITHMETIC OVERFLOW
	JRST	OVERF.			;YES
	MOVE	AC0	,.JBTPC		;MOVE PC IN AC0
	OUTSTR [ASCIZ/
%?	ILLEGAL MEMORY REFERENCE/]
	JRST	ERRDB1			;AND JUMP TO ERRDEB1
;*******************************************************************************
TIMINT:	SETZ	AC0	,
	RUNTIM	AC0	,		;GET RUNTIME
	SUB	AC0	,LIMIT		;
	JUMPGE	AC0	,TIMLIM		;IF THERE IS NOT ENOUGH TIME
	MOVEI	AC0	,21000		;ARGUMENT FOR APRENB
	APRENB	AC0	,
	MOVE	AC0	,@RGSTRS	;RESTORE AC0
	JRSTF	@.JBTPC			;JUMP BACK TO THE PROGRAM
;*******************************************************************************
TIMLIM:	OUTSTR [ASCIZ/
%?	TIME LIMIT EXCEEDED/]
	MOVE	AC0	,.JBTPC		;PC TO AC0
	JRST	ERRDB1			;JUMP TO ERRDEB1
;
;*** PROCEDURE DEBUG.
;    - SAVE USER REGISTERS
;    - PROVIDE PROGRAM STACK FOR DEBUG SYSTEM
;    - ENTER DEBUG SYSTEM
;    - RESTORE USER REGISTERS AND RETURN
;
DEBUG.: MOVE	AC1	,RGSTRS		;GET DEBUG-REGISTERS
	MOVEI	NEWREG	,DEBSIZE(AC1)
	MOVEI	BASIS	,20(AC1)
	MOVEI	TOPP	,1(BASIS)
	PUSHJ	TOPP	,DEBUG		;DEBUG
	HRLZ	17	,RGSTRS		;RESTORE USER-REGISTERS
	BLT	17	,17
	POPJ	TOPP	,
;
;*** FUNCTION SHRCOD
;    - RETURN TRUE IF HIGH-SEGMENT IS
;      SHARABLE, OTHERWISE FALSE
;
SHRCOD:	HRROI	AC1	,.GTSGN		;SEE IF HGH SEGM. IS SH.
	GETTAB	AC1	,		; LOOK AT .GTSGN TABLE
	HALT				;ERROR RETURN
	LSH	AC1	,777736		;SHIFT BIT 1 TO RIGHTMOST PLACE
	ANDI	AC1	,1		;CLEAR THE OTHER BITS
	POPJ	TOPP	,
;
;*** LITERALS
;
	LIT
	END
